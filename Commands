Practical 1:
Commands:
.
dotnet
.
dotnet --version
.
dotnet new console -o MyApp
.
cd MyApp
.
program.cs
.
Edit code:
Console.WriteLine("Hello World!");
Console.WriteLine("The current time is "+ Date Time.Now);
Console.WriteLine("Name:Gaurav Das, Roll no:03");
.
dotnet run

Practical 2:
Commands:
.
Make a folder named MyMVC
.
cd MyMVC
.
dotnet new mvc --auth none --force
.
Inside HomeController.cs write
public String Index(){return"Hello World"}
.
dotnet run
.
Make a new file named 'StockQuote.cs' and save it in Models folder and write the following:
using System;
namespace MyMVC.Models
{
public class StockQuote
{
public string Symbol(get;set;)
public int Price(get;set;)
}
}
.
Inside HomeController.cs edit the following:
public asyn task <IActionResult> Index()
{
var model=new StockQuote{Symbol="Hello", Price=3200};
return View(model);
}
.
cd /MyMVC/Views/Home 
.
Index.cshtml
.
Write the following inside the <div>:
Symbol: @Model.Symbol </br>
Price: $@Model.Price </br>
.
dotnet run

Practical:4
Commands:
.
docker pull rocker/verse
.
docker login–username=gauravdas2001
.
docker image
.
docker tag  (image ID) gauravdas2001/repos1:firsttry
.
docker push gauravdas2001/repos1:firsttry

Practical 5:
Commands:
.
docker pull nginx
.
docker run -it --name=webApp -d -p 80:80 nginx
.
(Click on open port and then enter 80)
.
docker exec -it webApp bash
.
cd /usr/share/nginx/html 
.
echo "Hello KB">index.html
.
Exit Docker ps
.
docker stop webApp 
.
docker run -it --name=webApp1 -d -p 80:80 nginx
.
docker volume create MyVolume
.
(Click on open port and then enter 80)
.
docker volume create MyVolume
.
docker volume ls
.
docker volume inspect MyVolume
.
 docker run -d --name=webApp99 –mount source=MyVolume, destination=/usr/share/nginx/html -p 81:80 nginx
.
(Click on open port and then enter 80)
.
cd /var/lib/docker
.
cd volumes
.
cd MyVolume
.
cd _data
.
echo “from My Volume hello KB”> index.html  
.
Refresh port 80
.
docker stop webApp99 
.
docker run -d --name=webApp10 –mount source=MyVolume,destination=/usr/share/nginx/html -p 81:80 nginx

